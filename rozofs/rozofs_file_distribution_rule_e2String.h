#ifndef __rozofs_file_distribution_rule_e2String_h__
#define __rozofs_file_distribution_rule_e2String_h__
#ifdef __cplusplus
extern "C" {
#endif /*__cplusplus*/
#include <strings.h>

/*___________________________________________________________________
 
   Generated by enum2String.py 
   Date : Wednesday 2018 October 10, 14:48:30
   Command line : 
 ../tools/enum2String.py -n rozofs_file_distribution_rule_e -f rozofs.h -c 25

  ____________________________________________________________________
*/

/*_________________________________________________________________
 * Builds a string from an integer value supposed to be within
 * the enumerated list rozofs_file_distribution_rule_e
 *
 * @param x : value from rozofs_file_distribution_rule_e to translate into a string
 *
 * The input value is translated into a string deduced from the enum
 * definition. When the input value do not fit any of the predefined
 * values, "??" is returned
 *
 * @return A char pointer to the constant string or "??"
 *_________________________________________________________________*/ 
static inline char * rozofs_file_distribution_rule_e2String (const rozofs_file_distribution_rule_e x) {
  switch(x) {
    case rozofs_file_distribution_size_balancing : return("size balancing");
    case rozofs_file_distribution_round_robin_write_1: return("round robin write 1");
    case rozofs_file_distribution_round_robin_write_2: return("round robin write 2");
    case rozofs_file_distribution_round_robin_write_3: return("round robin write 3");
    case rozofs_file_distribution_round_robin_read: return("round robin read");
    case rozofs_file_distribution_wsid_write     : return("wsid write");
    case rozofs_file_distribution_wsid_read      : return("wsid read");
    case rozofs_file_distribution_wfsz_write     : return("wfsz write");
    case rozofs_file_distribution_wfsz_read      : return("wfsz read");
    case rozofs_file_distribution_max            : return("max");
    /* Unexpected value */
    default: return "??";
  }
}

#ifdef	__cplusplus
}
#endif
#endif

